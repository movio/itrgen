/*
 * CODE GENERATED AUTOMATICALLY WITH github.com/movio/itrgen
 * THIS FILE SHOULD NOT BE EDITED BY HAND
 */
package custom

// MyStruct Iterator
type MyStructItr []MyStruct

// MapString takes a mapping function, invokes the mapping function
// for each element in itr, and returns the results as a slice.
// If the mapping function returns err, MapString immediately returns nil, err.
func (itr MyStructItr) MapString(fn func(MyStruct) (string, error)) ([]string, error) {
	results := []string{}
	for _, i := range itr {
		result, err := fn(i)
		if err != nil {
			return nil, err
		}
		results = append(results, result)
	}
	return results, nil
}

// MapInt64 takes a mapping function, invokes the mapping function
// for each element in itr, and returns the results as a slice.
// If the mapping function returns err, MapInt64 immediately returns nil, err.
func (itr MyStructItr) MapInt64(fn func(MyStruct) (int64, error)) ([]int64, error) {
	results := []int64{}
	for _, i := range itr {
		result, err := fn(i)
		if err != nil {
			return nil, err
		}
		results = append(results, result)
	}
	return results, nil
}
